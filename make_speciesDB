#!/bin/bash

usage() 
{ 
    echo -e "
\e[1;33mThis script is used to build AllEnricher database for specified species.
PS: Only support human for Disease Ontology analysis.

    Usage: `basename $0` [options] [arg...]

        -vg|versiongo	AllEnricher GO database version to use, like\"GO20181026\";
                        default version is the most recent version you had build.
        -vr|versionre   AllEnricher GO database version to use, like\"GO20181026\";
                        default version is the most recent version you had build.
        -s|species	Organism kegg abbreviation, like \"hsa\" for human;
        -i|taxid	Organism taxnomy id], like \"9606\" for human;
        -R|Rscript	Rscript program, like \"\$WHEREYOUR/Rscript\";
        -h|help	        Print this help information." 
    exit 1 
} 

if [ $# == 0 ]; then 
    usage 
fi 

while getopts 'vg:vr:s:i:R:h' opt; 
do	
    case ${opt} in
        vg|versiongo)
            GOdb="${OPTARG}";;
        vr|versionre)
            reacdb="${OPTARG}";;
        s|species)
            organism="${OPTARG}";;
	i|taxid) 
	    taxid="${OPTARG}";;
        R|Rscript)
            Rscript="${OPTARG}";;
        h|help)
            usage
            exit 1;;
        ?)
            usage
	    exit 1
    esac
done

if [ ! $organism ]
then
    echo "[error] Please specify the organism kegg  abbreviation."
    exit 1
fi

if [ ! $taxid ]
then
    echo "[error] Please specify the organism taxnomy id."
    exit 1
fi

if [ ! $Rscript ]
then
    echo "[error] Please specify the Rscript program to use."
    exit 1
fi

bin=`cd $(dirname $0);pwd`
date="`date +%Y%m%d`"
allversion=`ls $bin/database/basic/go/`
echo -e "[Attention] Avaliable AllEnricher GO database version: \n$allversion"

if [ ! $GOdb ]
then
	OLD_IFS="$IFS" 
	IFS="\n" 
	arr=($allversion) 
	IFS="$OLD_IFS" 
	for s in ${arr[@]} 
	do 
    		GOdb=$s
	done
fi
echo -e "[Attention] You are using AllEnricher GO database version: \n$GOdb"

allversion2=`ls $bin/database/basic/reactome/`
if [ ! $reacdb ]
then
        OLD_IFS="$IFS" 
        IFS="\n" 
        arr=($allversion2) 
        IFS="$OLD_IFS" 
        for s in ${arr[@]} 
        do  
                reacdb=$s
        done
fi
echo -e "[Attention] You are using AllEnricher Reactome database version: \n$reacdb"


echo -e "\e[1:33m[`date`]|---Make AllEnricher go database for $organism begin..."$(tput sgr0)
mkdir -p $bin/database/organism/v$date/$organism/
sh $bin/src/makeDB.go.v1.0.sh -v $GOdb -i $taxid -s $organism -o $bin/database/organism/v$date/$organism/
echo -e "\e[1:33m[`date`]---|Make GO DB finished!"$(tput sgr0)

echo -e "\e[1:33m[`date`]|---Make AllEnricher kegg database for $organism begin..."$(tput sgr0)
sh $bin/src/makeDB.kegg.v1.1.sh -s $organism -i $taxid -g $bin/database/basic/go/$GOdb/gene_info.gz -o $bin/database/organism/v$date/$organism/ -R $Rscript
echo -e "\e[1:33m[`date`]---|Make KEGG DB finished!"$(tput sgr0)

echo -e "\e[1:33m[`date`]|---Make AllEnricher Reactome database for $organism begin..."$(tput sgr0)
nn=0
for s in bta cel cfa dre ddi dme gga hsa mmu mtu pfa rno sce spo ssc xtr
do
    if [ $s != $organism ]
    then
        continue
    else
        sh $bin/src/makeDB.reactome.v1.0.sh -v $reacdb -s $organism -i $taxid -o $bin/database/organism/v$date/$organism/ && nn=1
    fi
done

if [ $nn == 0 ]
then
    echo -e "\e[1:33m[`date`]---|Reactome database do not support this species currently: $organism "$(tput sgr0)
fi

echo -e "\e[1:33m[`date`]---|Make Reactome DB finished!"$(tput sgr0)

if [ $organism == "hsa" ]
then
    echo -e "\e[1:33m[`date`]|---Make AllEnricher DO database for $organism begin..."$(tput sgr0)
    sh $bin/src/makeDB.do.v1.0.sh -s $organism -i $taxid -g $bin/database/basic/go/$GOdb/gene_info.gz -o $bin/database/organism/v$date/$organism/
    echo -e "\e[1:33m[`date`]---|Make DO database finished!" $(tput sgr0)
    echo -e "\e[1:33m[`date`]|---Make AllEnricher DisGeNET disease database for $organism begin..."$(tput sgr0)
    sh $bin/src/makeDB.DisGeNET.v1.0.sh -s $organism -i $taxid -g $bin/database/basic/go/$GOdb/gene_info.gz -o $bin/database/organism/v$date/$organism/
    echo -e "\e[1:33m[`date`]---|Make DisGeNET disease finished!" $(tput sgr0)
fi

echo -e "\e[1:33m[`date`]---|All finished!" $(tput sgr0)
